import React, { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import { Mail, Lock, Eye, EyeOff } from 'lucide-react';
import { useAuth } from '@/contexts/AuthContext';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';
const loginSchema = z.object({
  email: z.string().email('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'),
  password: z.string().min(6, '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤')
});
type LoginFormValues = z.infer<typeof loginSchema>;
const Login = () => {
  const navigate = useNavigate();
  const {
    signIn,
    loading
  } = useAuth();
  const [showPassword, setShowPassword] = useState(false);
  const form = useForm<LoginFormValues>({
    resolver: zodResolver(loginSchema),
    defaultValues: {
      email: '',
      password: ''
    }
  });
  const onSubmit = async (data: LoginFormValues) => {
    const success = await signIn(data.email, data.password);
    if (success) {
      navigate('/');
    }
  };
  const togglePasswordVisibility = () => setShowPassword(!showPassword);
  return <div className="flex min-h-screen flex-col items-center justify-center bg-background p-4">
      <div className="w-full max-w-2xl space-y-8">
        {/* Welcome Section */}
        <div className="text-center space-y-6 mb-12">
          <h1 className="text-4xl font-bold text-edu-primary mb-4">
            –í–∞—à–µ –±—É–¥—É—â–µ–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å!
          </h1>
          
          <div className="bg-gradient-to-r from-edu-light to-white p-8 rounded-2xl shadow-lg border">
            <div className="space-y-4 text-lg">
              <p className="text-2xl font-semibold text-edu-primary">
                üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ postupi.site ‚Äî –≤–∞—à –∫–ª—é—á –∫ —É—Å–ø–µ—à–Ω–æ–º—É –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –≤ –≤—É–∑! üöÄ
              </p>
              
              <p className="text-gray-700">
                –ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∏ –º—ã —Å–æ–∑–¥–∞–ª–∏ —ç—Ç–æ—Ç —Å–∞–π—Ç, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à –ø—É—Ç—å –≤ –í–£–ó –ª–µ–≥–∫–∏–º –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º! –ó–¥–µ—Å—å - —Å–∞–º–∞—è –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∏ –º—ã —Å–æ–±—Ä–∞–ª–∏ –µ–µ —Å –ª—é–±–æ–≤—å—é –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º. üìö
              </p>
              
              <p className="text-xl font-semibold text-edu-secondary">
                –ù–µ —É–ø—É—Å–∫–∞–π—Ç–µ —Å–≤–æ–π —à–∞–Ω—Å, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å–µ–π—á–∞—Å –∏ –¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ!
              </p>
            </div>
          </div>
        </div>

        {/* Login Form */}
        <div className="w-full max-w-md mx-auto rounded-lg border bg-card p-6 shadow-md">
          <div className="text-center mb-6">
            <h2 className="text-2xl font-bold">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
            <p className="mt-2 text-sm text-muted-foreground">
              –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
            </p>
          </div>

          <Form {...form}>
            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
              <FormField control={form.control} name="email" render={({
              field
            }) => <FormItem>
                    <FormLabel>Email</FormLabel>
                    <FormControl>
                      <div className="relative">
                        <Mail className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
                        <Input placeholder="example@mail.ru" className="pl-10" {...field} />
                      </div>
                    </FormControl>
                    <FormMessage />
                  </FormItem>} />

              <FormField control={form.control} name="password" render={({
              field
            }) => <FormItem>
                    <FormLabel>–ü–∞—Ä–æ–ª—å</FormLabel>
                    <FormControl>
                      <div className="relative">
                        <Lock className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
                        <Input placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" className="pl-10 pr-10" type={showPassword ? 'text' : 'password'} {...field} />
                        <button type="button" onClick={togglePasswordVisibility} className="absolute right-3 top-3 text-muted-foreground">
                          {showPassword ? <EyeOff className="h-4 w-4" /> : <Eye className="h-4 w-4" />}
                        </button>
                      </div>
                    </FormControl>
                    <div className="flex justify-end">
                      <Link to="/forgot-password" className="text-xs text-primary hover:underline">
                        –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                      </Link>
                    </div>
                    <FormMessage />
                  </FormItem>} />

              <Button type="submit" className="w-full" disabled={loading}>
                {loading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
              </Button>
            </form>
          </Form>

          <div className="mt-6 text-center">
            <p className="text-sm">
              –ù–µ—Ç —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏?{' '}
              <Link to="/register" className="text-sm font-bold text-edu-primary hover:text-edu-secondary underline decoration-2 transition-colors">
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Link>
            </p>
          </div>
        </div>
      </div>
    </div>;
};
export default Login;